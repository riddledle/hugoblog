<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Riddle&#39;s</title>
    <link>https://riddledle.github.io/hugoblog/post/</link>
    <description>Recent content in Posts on Riddle&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Dec 2016 23:51:32 +0800</lastBuildDate>
    <atom:link href="https://riddledle.github.io/hugoblog/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>书单</title>
      <link>https://riddledle.github.io/hugoblog/post/%E4%B9%A6%E5%8D%95/</link>
      <pubDate>Sat, 31 Dec 2016 23:51:32 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E4%B9%A6%E5%8D%95/</guid>
      <description>

&lt;h2 id=&#34;写在前面&#34;&gt;写在前面&lt;/h2&gt;

&lt;p&gt;大三开始，有了眼前这一篇，所谓书单也不过是把所有刷过的书记录下来，附上简短的书评。&lt;/p&gt;

&lt;p&gt;或许是纸质书，或许是电子书，或者只是文章的集合。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/IMG_0434.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《MacTalk跨越边界》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by池建强&lt;/code&gt;看完后关注了他的公众号MacTalk。学会了“腰间挂着两个滚烫的肾”这么个说法。“Talk is cheap,show me the code”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《绝对达成优秀团队养成术》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by横山信弘&lt;/code&gt;销售集团董事写的，一个职员译的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《心理学常识速查速用大全集》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by京师心智&lt;/code&gt;被书名吸引后发现，全是小故事&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《日语语音教程》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by徐坚&lt;/code&gt;想弄清楚拗音促音拔音看的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;《&lt;strong&gt;一本书读懂融资常识大全集&lt;/strong&gt;》&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by汇智书源&lt;/code&gt;“常识大全集系列”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;《&lt;strong&gt;商业思维导图&lt;/strong&gt;》&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by Christine Chopyak&lt;/code&gt;读得出作者的领导力和规划能力&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《记录，成为更好的自己》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by有道云笔记&amp;amp;萧秋水&lt;/code&gt;软广。话很多的产品分析&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;《中国大学生就业》&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;by中华人民共和国教育部&lt;/code&gt;《知音》&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>漫长细碎</title>
      <link>https://riddledle.github.io/hugoblog/post/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 31 Dec 2016 12:58:40 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E5%85%B3%E4%BA%8E%E5%8D%9A%E5%AE%A2/</guid>
      <description>

&lt;p&gt;无关SEO，无关流量，无关曝光，有关时间，有关力量，有关。&lt;/p&gt;

&lt;h2 id=&#34;历程&#34;&gt;历程&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tech+lyrics&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看了&lt;a href=&#34;http://ibruce.info/2013/11/22/hexo-your-blog/&#34;&gt;hexo你的博客&lt;/a&gt;之后，我建立了自己的&lt;a href=&#34;https://github.com/hexojs/hexo&#34;&gt;hexo&lt;/a&gt;博客，当时的目标是做前端工程师；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tech＋lyrics＋notes&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;渐渐的，我开始写一些和生活或兴趣相关的内容，由于旧模版的分类功能不是很便利，于是改了一套模版，拥有清晰的分类和标签云功能；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tech&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;制作了一份类似&lt;a href=&#34;http://edyfox.codecarver.org/html/index.html&#34;&gt;滇狐&lt;/a&gt;的主页；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lyrics+notes&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;放在原先的hexo博客里；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lyrics&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2016年的夏天，找了一套类似wiki的模版&lt;a href=&#34;https://github.com/wzpan/hexo-theme-wixo&#34;&gt;wixo&lt;/a&gt;，将歌词存放起来；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PM&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用&lt;a href=&#34;http://blog.golang.org/&#34;&gt;Go&lt;/a&gt;语言编写的&lt;a href=&#34;www.gohugo.io&#34;&gt;hugo&lt;/a&gt;引擎的模版拥有简洁的界面，垂直性强；&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PM+&lt;/strong&gt;：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;到现在，一个融合了一些前端经验和产品经验的比较正式的个人博客就确立了，它的界面简洁，样式清新，条目清晰；没有分类，归档，标签云等内容管理功能，垂直性强。&lt;/p&gt;

&lt;h2 id=&#34;友情链接&#34;&gt;友情链接&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>国内搜索引擎调研</title>
      <link>https://riddledle.github.io/hugoblog/post/%E5%9B%BD%E5%86%85%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 01 Nov 2016 15:35:26 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E5%9B%BD%E5%86%85%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%B0%83%E7%A0%94/</guid>
      <description></description>
    </item>
    
    <item>
      <title>手机应用的混合开发模式技术调研</title>
      <link>https://riddledle.github.io/hugoblog/post/%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%9A%84%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%B9%A6/</link>
      <pubDate>Tue, 01 Nov 2016 15:12:18 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E6%89%8B%E6%9C%BA%E5%BA%94%E7%94%A8%E7%9A%84%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88%E4%B9%A6/</guid>
      <description>

&lt;h2 id=&#34;序言&#34;&gt;序言&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Hybrid App（混合模式移动应用）是指介于Web App、Native App这两者之间的app，兼具“Native App良好用户交互体验的优势”和“Web App跨平台开发的优势”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此篇报告书将结合Hybrid App的特点和具体项目需求进行阐述。&lt;/p&gt;

&lt;p&gt;大体的技术方案是，DeviceOne项目提供底层的Native Api，基本上所有的用户逻辑放在Vue上做。&lt;/p&gt;

&lt;h2 id=&#34;技术现状&#34;&gt;技术现状&lt;/h2&gt;

&lt;h3 id=&#34;优势&#34;&gt;优势&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;兼容多平台，因此开发效率较高，开发成本较低，较适合需要快速试错或快速占领市场的产品；&lt;/li&gt;
&lt;li&gt;能够顺利访问手机的多种功能，保证产品功能的可拓展性；&lt;/li&gt;
&lt;li&gt;App Store中可下载，利于产品的推广；&lt;/li&gt;
&lt;li&gt;可线下使用，保证用户的残留度；&lt;/li&gt;
&lt;li&gt;Hybrid App中，Native和Web各自所占的比例自由，因此降低了开发时的难度；&lt;/li&gt;
&lt;li&gt;界面布局和风格设计自由，保证了产品的特色；&lt;/li&gt;
&lt;li&gt;从业务开发上讲，没有版本问题，有Bug能够及时修复；&lt;/li&gt;
&lt;li&gt;性能快，不会带来较差的用户体验。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;弊端&#34;&gt;弊端&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;就用户体验来说，Hybrid App是比不上原生应用的；&lt;/li&gt;
&lt;li&gt;因为需要连接网络，所以性能会稍慢；&lt;/li&gt;
&lt;li&gt;目前混合开发的技术还不是很成熟，因此学习成本较高，在开发时供学习调研的资料也比较少。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;功能分析&#34;&gt;功能分析&lt;/h2&gt;

&lt;h3 id=&#34;缩进式评论&#34;&gt;缩进式评论&lt;/h3&gt;

&lt;p&gt;缩进式评论风格如果使用Native来做是困难的，但是放到web端来做将是非常简单的，如利用web前端工具Vue，它是非常灵活的。&lt;/p&gt;

&lt;h3 id=&#34;多语言版本&#34;&gt;多语言版本&lt;/h3&gt;

&lt;p&gt;多语言版本的控制在Native端也是难以实现的，但是在web端有成熟的解决方案，如&lt;a href=&#34;https://github.com/jinzhe/vue-i18n&#34;&gt;i18n&lt;/a&gt;，Vue已有很成熟的做法。&lt;/p&gt;

&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;对于一款UGC类的社交新闻产品来说，用户产生的内容是主体，且用户拥有对社区的掌控权，这一特性决定了该产品的许多功能逻辑都可以放在web端来实现；&lt;/li&gt;
&lt;li&gt;web前端技术的介入可以帮助产品的布局和设计更加贴近社区类网站的效果，突出UGC内容；&lt;/li&gt;
&lt;li&gt;混合开发模式带来的高效率和低成本的优势，保证了产品能够快速上线和试错，同时在多平台运行，接触广泛的用户群；&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;成本预算&#34;&gt;成本预算&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;对于小型创业团队来说，采用混合开发是节省开发成本的一大利器，仅编写一次核心代码即可快速发布；&lt;/li&gt;
&lt;li&gt;人力资源方面，需要web前端开发人员的介入，不需要分别的iOS／Android开发人员；&lt;/li&gt;
&lt;li&gt;开发周期短，测试快，时间成本低。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;应用混合开发模式，可以实现高效率，低成本的开发，实现快速试错和抢占市场的目标，充分利用web端的灵活性可以解决开发中具体问题，同时带去最接近Native的体验。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>订单支付系统大致流程</title>
      <link>https://riddledle.github.io/hugoblog/post/%E8%AE%A2%E5%8D%95%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E5%A4%A7%E8%87%B4%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Tue, 01 Nov 2016 15:06:28 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E8%AE%A2%E5%8D%95%E6%94%AF%E4%BB%98%E7%B3%BB%E7%BB%9F%E5%A4%A7%E8%87%B4%E6%B5%81%E7%A8%8B/</guid>
      <description>&lt;p&gt;O2O电商产品往往都具有订单中心和支付系统，流畅严谨的逻辑和符合用户习惯的交互将会给用户带去舒适的体验，在开发的过程中依据产品需求实现相应板块的衔接也是值得注意的环节。&lt;/p&gt;

&lt;p&gt;程序员们阅读完产品经理给出的产品需求说明书之后，凭借程序员一贯的思维方式往往难以形成清晰且可执行的逻辑，订单中心的基本逻辑用语言表述是曲折的，这时一套流程图可以帮助大家的理解。&lt;/p&gt;

&lt;p&gt;特别的，开发订单支付系统时，在&lt;strong&gt;限制用户操作&lt;/strong&gt;和&lt;strong&gt;调控订单处理进度&lt;/strong&gt;两个层面，特别需要对订单逻辑有清晰的规划，如若不然，将导致一些重复劳动和目标不明确等问题，导致开发效率下降。&lt;/p&gt;

&lt;p&gt;以下是针对某O2O外送平台的订单中心给出的基本流程图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B%E5%9B%BE.png&#34; alt=&#34;仅供参考&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用户中心（Auth）梳理</title>
      <link>https://riddledle.github.io/hugoblog/post/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%EF%BC%88Auth%EF%BC%89%E6%A2%B3%E7%90%86/</link>
      <pubDate>Tue, 01 Nov 2016 15:06:07 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E7%94%A8%E6%88%B7%E4%B8%AD%E5%BF%83%EF%BC%88Auth%EF%BC%89%E6%A2%B3%E7%90%86/</guid>
      <description>

&lt;p&gt;用户中心（Authority）相较其它板块来说，逻辑较为简单，但是优先级和使用频率是很高的。&lt;/p&gt;

&lt;p&gt;以下参考&lt;a href=&#34;https://www.wilddog.com/&#34;&gt;野狗&lt;/a&gt;（wilddog）官方文档中的身份认证部分，对用户中心的逻辑简单梳理。&lt;/p&gt;

&lt;h2 id=&#34;组成元素&#34;&gt;组成元素&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ID：用来标识用户的身份；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用户属性：包括用户的ID，主邮箱地址，名称，照片地址；&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;用户属性属于用户信息的一部分，连同用户的登陆信息共同组成&lt;strong&gt;用户信息&lt;/strong&gt;部分&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Provider（提供者）：Provider 是身份认证提供方，即电子邮箱地址与密码，或是手机号码，或是第三方平台（微信，微博，QQ）账号等；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;当前用户：进行注册或登陆操作后的用户，成为当前用户；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用户生命周期：指用户从注册或登陆到退出登陆这之间的变化过程，包含三种状态：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;用户注册或登陆成功&lt;/li&gt;
&lt;li&gt;Token刷新&lt;/li&gt;
&lt;li&gt;退出登陆&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;身份认证令牌（Token）：用于获取访问用户的权限，包含三种类型：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ID Token：用户获取用户的访问权限&lt;/p&gt;

&lt;p&gt;access Token：用户获取第三方身份认证提供商用户的访问权限&lt;/p&gt;

&lt;p&gt;custom Token：用于获取已有账户体系中用户的访问权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;用户管理&#34;&gt;用户管理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建用户&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;获取用户信息，包括获取：&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当前用户&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用户属性&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Provider的用户属性&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;更新用户信息，包括更新：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;用户属性&lt;/li&gt;
&lt;li&gt;邮箱地址&lt;/li&gt;
&lt;li&gt;登陆密码&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除用户&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重新进行身份认证&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;认证方式&#34;&gt;认证方式&lt;/h2&gt;

&lt;p&gt;认证方式有很多种，根据产品特性和实际情况进行取舍。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;邮箱认证&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;手机认证&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;第三方应用帐号认证&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自定义身份认证&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;匿名认证&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;​&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>团队协作需要文档</title>
      <link>https://riddledle.github.io/hugoblog/post/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%E9%9C%80%E8%A6%81%E6%96%87%E6%A1%A3/</link>
      <pubDate>Thu, 27 Oct 2016 19:45:02 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%E9%9C%80%E8%A6%81%E6%96%87%E6%A1%A3/</guid>
      <description>&lt;p&gt;一项任务有多人参与的时候，由最初负责的人撰写一篇文档以指导其他人进行相关开发工作是有必要的，特别是在小型团队中个人往往会根据实际情况参与不同的任务，这时为了团队协作可以说人人都有撰写文档的义务，涉及远程协助时更是如此。&lt;/p&gt;

&lt;p&gt;文档可以有效的减少沟通成本，明确开发细节，提高任务的连贯性。&lt;/p&gt;

&lt;p&gt;下载的软件内附带的&amp;rdquo;请先阅读.txt&amp;rdquo;，官方提供的说明文档（documentation），github上要求的每个repository都提供的readme.md，开发团队内部的技术性说明文档（接口说明，部署环境要求等），都是文档。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在解决浏览器兼容性问题时，一台机器需要临时部署相关的开发环境，但是因为没有事先预备好的文档，所以导致我为了协调两端的开发耗费了不少时间精力，而且与有参考文档的情况相比，进程更混乱缓慢了，由此可见文档的重要性。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>reddit调研</title>
      <link>https://riddledle.github.io/hugoblog/post/reddit%E8%B0%83%E7%A0%94/</link>
      <pubDate>Wed, 26 Oct 2016 18:22:03 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/reddit%E8%B0%83%E7%A0%94/</guid>
      <description>

&lt;h2 id=&#34;reddit-https-www-reddit-com&#34;&gt;&lt;a href=&#34;https://www.reddit.com/&#34;&gt;reddit&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;the front page of the internet／“提前于新闻发生，来自互联网的声音”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-26%20%E4%B8%8B%E5%8D%888.58.30.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;reddit是UGC领域的翘楚，背后是优秀的算法支持，它拥有简易的UI,中英混杂的翻译，但最主要的是：用户拥有对社区的掌控权。&lt;/p&gt;

&lt;p&gt;作为一个社交新闻社区，reddit是重社区轻社交的，而它将社区内容管理的“决定权”交给用户，造就了一批不离不弃黏度优良的用户，比如说&lt;strong&gt;一般用户&lt;/strong&gt;可以通过投票功能支持或反对某主题或回复，从而决定首页或者热评区的内容；&lt;strong&gt;版主&lt;/strong&gt;拥有相应板块权限和内容的管理权。&lt;/p&gt;

&lt;p&gt;reddit上发布的内容注重图片和视频的分享，从而保证了趣味性；用户可以发表链接直接跳转到原地址，减少了分享成本，加速信息传播。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;编辑权和权益&#34;&gt;编辑权和权益&lt;/h2&gt;

&lt;p&gt;在形式上和reddit相似的百度贴吧同样是一款UGC产品，但是在社区内容的编辑权上，百度贴吧的用户明显比reddit的用户“委屈”不少，除了呈现在首页的内容由不得用户决定，版主权利纷争，以及一些很影响阅读体验的广告之外，还存在类似“&lt;a href=&#34;http://finance.qq.com/a/20160112/061586.htm&#34;&gt;血友吧事件&lt;/a&gt;”这样的恶劣广告营销，导致百度贴吧的风评一度跌入谷底。&lt;/p&gt;

&lt;p&gt;虽然高普及与低创收能力是reddit与百度贴吧的相似点，但还是应该用户权益先行，在内容的编辑权上做好用户和官方的均衡，不仅用户增强维权意识，而且监管官方的行为，或许这样才能在赢得好口碑和高人气的同时打造内容丰富有趣的社区。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;参考《&lt;a href=&#34;http://tech.163.com/16/0114/07/BD98E565000915BF.html&#34;&gt;易评：百度贴吧和Reddit究竟有什么不一样&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;用户决定热度&#34;&gt;用户决定热度&lt;/h2&gt;

&lt;p&gt;网易在内容打造上的能力确实有口皆碑，网易热是网易打造的一款类reddit的社会化内容分享平台，同样将内容排序和筛选的决定权交给了用户，通过积累“顶”“踩”数量来决定呈现在热门区和其他分类下的内容，弘扬跟帖文化。&lt;/p&gt;

&lt;p&gt;用户决定热度的内容打造方式确实可以帮助用户更直接明确的彰显自己的态度，而且有态度的内容又可以引起关注者的跟帖和热议，同时最吸引用户注意的热门内容板块成为了普遍用户的共同态度的风向标。&lt;/p&gt;

&lt;p&gt;网易云音乐的评论区拥有点赞和回复功能，获得点赞数较高的评论会显示在精彩评论区，这是支持用户对其他用户的回复给予正向的回应，当欣赏一首歌曲时，听者往往会浏览评论区，而精彩评论区的内容往往能够引导听者对歌曲的理解。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;参考《&lt;a href=&#34;http://www.admin5.com/article/20150609/602942.shtml&#34;&gt;让用户决定头条是哪个，都想做中国版Reddit？&lt;/a&gt;》&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;延伸&#34;&gt;延伸&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Lily的评论区和歌词注释区可以考虑采用这种“用户决定热度”的方式，但是根据内容的不同，考虑是否采用投票（即同时拥有支持和反对选项）的形式；&lt;/li&gt;
&lt;li&gt;reddit的官方APP拥有全新配色和UI，阅读体验良好，当涉及UGC类APP的讨论时，可以将之作为参考。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>躲不开的兼容性问题</title>
      <link>https://riddledle.github.io/hugoblog/post/%E8%BA%B2%E4%B8%8D%E5%BC%80%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 26 Oct 2016 18:21:13 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E8%BA%B2%E4%B8%8D%E5%BC%80%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/</guid>
      <description>

&lt;p&gt;最近接触了一些兼容性相关的问题。不能够兼容各种环境和设备的产品或许不能够被称为好的产品吧，所以说是躲不开的兼容性问题。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://baike.baidu.com/view/80015.htm&#34;&gt;兼容性&lt;/a&gt;（compatibility）是指硬件之间、软件之间或是软硬件组合系统之间的相互协调工作的程度。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;人&#34;&gt;人&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;下属&lt;/strong&gt;不该总等着&lt;strong&gt;老板&lt;/strong&gt;来分配任务；&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;同事&lt;/strong&gt;之间各自负责的任务也有可能是交叉的，常有互相帮助的时候；&lt;/p&gt;

&lt;p&gt;如果做&lt;strong&gt;后端&lt;/strong&gt;的人被派去解决一些前端问题，又或做&lt;strong&gt;前端&lt;/strong&gt;的需要部署一些开发环境，这时就会互相请教；&lt;/p&gt;

&lt;p&gt;维护&lt;strong&gt;前人&lt;/strong&gt;留下的诡异的代码是麻烦的，所以&lt;strong&gt;自己&lt;/strong&gt;也尽量不为别人挖坑。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;浏览器&#34;&gt;浏览器&lt;/h2&gt;

&lt;p&gt;主要还是IE兼容的问题。&lt;/p&gt;

&lt;p&gt;比如说目前在做的一个项目的一些后台管理页面，在IE浏览器上的布局异常，虽然这是一个对浏览器兼容性要求并不高的项目，但是还是需要遵守兼容性规范的，这时候就要检查代码，找到某些无法兼容IE的标签或者样式等，这时候如果原来的代码比较糟糕就更费心了。&lt;/p&gt;

&lt;p&gt;不能让用户换浏览器，只有努力做到兼容；客户云：“我关注的是行，跟不行没关系。感谢。”&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;移动设备&#34;&gt;移动设备&lt;/h2&gt;

&lt;p&gt;目前iOS和Android开发工程师的工作被抢得差不多了，一些开发工具能够快速完成跨平台的开发工作，但非原生开发还是存在一些问题，在兼容不同设备的差异性上还是存在漏洞的。&lt;/p&gt;

&lt;p&gt;上一个项目里，APP开发准备告一段落的时候，剩下一个iOS设备显示异常的问题待解决，为了解决这个”轮播图片在iOS设备上显示顺序混乱或显示不全“的问题，开发们彻底检查和钻研了几天，同时到开发框架的官网去咨询，最终得到了一个”属于官方bug“的结果，并由官方更新组件来结束这一问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>整个开发流程的大致梳理</title>
      <link>https://riddledle.github.io/hugoblog/post/%E4%BA%A7%E5%93%81%E4%B8%8A%E7%BA%BF%E4%B9%8B%E5%89%8D/</link>
      <pubDate>Thu, 20 Oct 2016 01:21:38 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E4%BA%A7%E5%93%81%E4%B8%8A%E7%BA%BF%E4%B9%8B%E5%89%8D/</guid>
      <description>&lt;p&gt;最近一段时间外卖手机APP的项目进入了开发的收尾阶段，进行了问题的集中，调试，测试。&lt;/p&gt;

&lt;p&gt;团队协作的项目非常追求效率，但并不是要牺牲质量。&lt;/p&gt;

&lt;p&gt;仅是在一个小型外包工作室中，我学到的即是：一个商业项目的客户对项目完成的速度和质量要求是很严格的，作为执行者的我们并不是要牺牲哪一方去成就另一方，而是在开发的整个流程的每个阶段，都谨慎地为这两者效力，从代码角度来看，在开发流程的：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;开发前期：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;科学的系统架构能够为项目在以后的开发过程中省下大笔沟通和维护成本；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;目录的构建应该要遵循规范（层级结构，类别），不应该偷懒或者图省事简化目录结构，因为这样可能会使以后的维护成本大大提高；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;开发时的代码／调试测试的代码／正式发布的代码，应该划分明确，这样什么时候需要什么版本的代码就比较清晰了。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;正式开发：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;本地测试的代码不要提交版本库，提交的代码应该是正式的，测试完毕的；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;提交代码时的commit尽量详细准确，便于追踪代码更新的历史和进行版本管理；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;良好的代码习惯（完整的注释，接口的封装，正确的命名方式）；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;开发产品的某一特定功能时，遇到涉及性能或者架构的问题时应该（让产品经理）和其他开发人员沟通，找到最好最快的方式；&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;比如在这个项目中，在完成“收藏商家”这一功能时，需求是“点击收藏商家按钮，按钮变为实心状，用户在进入已收藏商家主页时，收藏按钮应作相应变化”，前端在开发这个任务时，需要检查当前用户的收藏列表里是否有当前商家，而后端返回的接口里是没有这一数据的，那么前端就需要去检查一遍用户的收藏商家列表，这样网络访问就需要两遍，前端是需要尽量减少网络请求次数的，后端则是要尽量减少数据接口的，那么当时这个问题就被抛出了，最终的解决方案落实为该功能的重构，也就是后端的调整。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;调试测试：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前期的工作做得比较到位，开发时严谨高效的话，调试测试阶段耗费的精力将相对较少，但是我认为这一阶段是所有开发流程中最为重要的。在调试测试的过程中，不仅需要对以往工作的回顾总结，也需要对产品在功能性，体验性等方面的提升空间的摸索。调试测试时，重点对以下几个方面进行检查：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;BUG检查：或许要消灭所有bug是不可能的，甚至用来进行开发的工具自身都带有bug也不一定，但是需要知道的是这些bug是什么，在哪里，严重程度，可修复性；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;性能优化：性能的优化是在功能全部实现的前提下进行的，仅仅实现是不够的，在网络连接速度，数据获取速度等方面需要尽量优化，比如上面提到的“收藏商家”的例子；&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;优化性能时，除了考虑当前，还要考虑到以后的改动或者迭代，比如说，在优化一个“轮播点联动显示”的功能时，本身所有的轮播点是固定定位在轮播头底部某一位置的，但是轮播点的数量应该是对应轮播图片数量的，那么如果轮播图增加了，轮播点是否也应该相信增加并且做到完美的布局，所以这个任务完成之后，轮播点实现了自动靠右排列。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户体验：在测试的过程中，以用户的身份去使用和体验产品，逻辑是否通顺，交互是否良好，细节是否完善，感受是怎样的，这些问题可以被自然地发现，从而得到修改优化。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;比如在对整个APP的体验过程中，发现了动画显示不流畅，获取验证码按钮过小，等待页面显示时缺少加载动画等问题，这些问题只有在体验产品时才会被重视和提出，但往往这些问题对一款产品是否合格规范甚至完美是至关重要的。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Lily桌面版v0.1</title>
      <link>https://riddledle.github.io/hugoblog/post/Lily%E6%A1%8C%E9%9D%A2%E7%89%88v0.1/</link>
      <pubDate>Thu, 20 Oct 2016 01:00:05 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/Lily%E6%A1%8C%E9%9D%A2%E7%89%88v0.1/</guid>
      <description>

&lt;h3 id=&#34;工具&#34;&gt;工具：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Azure 7.0&lt;/li&gt;
&lt;li&gt;Element components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;原则&#34;&gt;原则：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;风格清新&lt;/li&gt;
&lt;li&gt;界面简洁&lt;/li&gt;
&lt;li&gt;快速shuffle&lt;/li&gt;
&lt;li&gt;突出评论&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Element官网配色&lt;/li&gt;
&lt;li&gt;豆瓣FM&lt;/li&gt;
&lt;li&gt;网易云音乐桌面版播放器&lt;/li&gt;
&lt;li&gt;网易云音乐私人FM&lt;/li&gt;
&lt;li&gt;Genuis.com &amp;gt; Comments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-19%20%E4%B8%8B%E5%8D%8810.54.09.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>四点小建议</title>
      <link>https://riddledle.github.io/hugoblog/post/%E5%9B%9B%E7%82%B9%E5%B0%8F%E5%BB%BA%E8%AE%AE/</link>
      <pubDate>Sun, 16 Oct 2016 01:16:26 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E5%9B%9B%E7%82%B9%E5%B0%8F%E5%BB%BA%E8%AE%AE/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;功能互相关联，不要造孤岛&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;酷狗的“听唱看玩”的集成&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;产品去引领用户，而不是单纯依赖调研&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;研究用户心理，被动变主动&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;注重用户体验，回归产品&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;没啥说&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;关注底层大众（屌丝宅男），但产品保持高大上&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;“宅男还是喜欢林志玲的”&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Lily功能梳理初稿</title>
      <link>https://riddledle.github.io/hugoblog/post/Lily%E5%8A%9F%E8%83%BD%E6%A2%B3%E7%90%86%E5%88%9D%E7%A8%BF/</link>
      <pubDate>Tue, 11 Oct 2016 23:51:37 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/Lily%E5%8A%9F%E8%83%BD%E6%A2%B3%E7%90%86%E5%88%9D%E7%A8%BF/</guid>
      <description>

&lt;h1 id=&#34;基本功能板块&#34;&gt;基本功能板块&lt;/h1&gt;

&lt;h2 id=&#34;logo&#34;&gt;LOGO&lt;/h2&gt;

&lt;p&gt;内容为“LILY”的logo，设计简洁，点击后展开导航菜单。&lt;/p&gt;

&lt;h2 id=&#34;导航菜单&#34;&gt;导航菜单&lt;/h2&gt;

&lt;p&gt;默认隐藏，歌曲播放时半透明显示，点击logo后滑出，包含四个模块：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FM&lt;/li&gt;
&lt;li&gt;推荐&lt;/li&gt;
&lt;li&gt;所有歌曲&lt;/li&gt;
&lt;li&gt;上传歌曲&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;动态变化的背景&#34;&gt;动态变化的背景&lt;/h2&gt;

&lt;p&gt;参照桌面版网易云音乐／QQ音乐的歌曲播放主界面的背景处理方式，即对专辑图片的放大，虚化和渲染，并且参考&lt;a href=&#34;http://nipponcolors.com/#sakuranezumi&#34;&gt;NIPPON COLORS&lt;/a&gt;的变化效果，实现lily在歌曲切换或者在歌曲播放时，背景色调／图片的变换。&lt;/p&gt;

&lt;h2 id=&#34;登录-注册-游客&#34;&gt;登录/注册/游客&lt;/h2&gt;

&lt;p&gt;为登录的用户身份为游客，游客可以：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;发表弹幕&lt;/li&gt;
&lt;li&gt;发表评论&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已注册未完成邮箱验证的用户，可以上传图片；&lt;/p&gt;

&lt;p&gt;完成邮箱验证的用户，可以上传歌曲。&lt;/p&gt;

&lt;h2 id=&#34;播放列表&#34;&gt;播放列表&lt;/h2&gt;

&lt;p&gt;游客和已登录用户都可以在点击播放一首歌曲后，立即创建当前播放列表并添加当前歌曲；&lt;/p&gt;

&lt;p&gt;游客的列表在关闭页面后清空，已登录用户的列表将被保存。&lt;/p&gt;

&lt;h2 id=&#34;评论区&#34;&gt;评论区&lt;/h2&gt;

&lt;p&gt;评论板块包含：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;发表评论&lt;/li&gt;
&lt;li&gt;图片评论&lt;/li&gt;
&lt;li&gt;显示评论总数&lt;/li&gt;
&lt;li&gt;精彩评论&lt;/li&gt;
&lt;li&gt;最新评论&lt;/li&gt;
&lt;li&gt;对评论点赞&lt;/li&gt;
&lt;li&gt;回复某条评论&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;主体区域&#34;&gt;主体区域&lt;/h1&gt;

&lt;p&gt;无论是在何种播放模式下，页面的主体部分都被等分成三个区域，分别是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;播放器区 &lt;!--FM播放模式和正常播放模式，不必设计两套播放器，采用一致的播放器即可--&gt;

&lt;ul&gt;
&lt;li&gt;显示歌曲名，歌手名，专辑名，时长；&lt;/li&gt;
&lt;li&gt;切换下一首&lt;/li&gt;
&lt;li&gt;收藏按钮－－添加至播放列表&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;歌词区

&lt;ul&gt;
&lt;li&gt;点击可切换歌词是否滚动&lt;/li&gt;
&lt;li&gt;不滚动－－对应评注区&lt;/li&gt;
&lt;li&gt;滚动－－对应弹幕区&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;评注/弹幕区

&lt;ul&gt;
&lt;li&gt;参考genuis.com的评注方式&lt;/li&gt;
&lt;li&gt;参考QQ音乐的弹幕形式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;不同功能模块下的补充说明&#34;&gt;不同功能模块下的补充说明&lt;/h1&gt;

&lt;h2 id=&#34;fm&#34;&gt;FM&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;播放器组件

&lt;ul&gt;
&lt;li&gt;垃圾箱功能，被放入垃圾箱的歌曲将从用户当前收听的频道的歌曲列表中移除&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;推荐&#34;&gt;推荐&lt;/h2&gt;

&lt;p&gt;推荐的分类和歌曲内容由后台控制&lt;/p&gt;

&lt;h2 id=&#34;所有歌曲&#34;&gt;所有歌曲&lt;/h2&gt;

&lt;p&gt;采用LQIP – Low Quality Image Placeholders技术 （虽然是2013年的了）&lt;/p&gt;

&lt;h2 id=&#34;上传歌曲&#34;&gt;上传歌曲&lt;/h2&gt;

&lt;p&gt;仿照之前实现的湿湿娘的视频搬运功能，已登录的用户可以上传歌曲，上传时必需的相关信息是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;歌曲名&lt;/li&gt;
&lt;li&gt;歌手名&lt;/li&gt;
&lt;li&gt;专辑名&lt;/li&gt;
&lt;li&gt;歌曲文件&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MyProjectOneAssignment</title>
      <link>https://riddledle.github.io/hugoblog/post/MyProjectOneAssignment/</link>
      <pubDate>Tue, 11 Oct 2016 23:51:16 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/MyProjectOneAssignment/</guid>
      <description>

&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;

&lt;p&gt;I find myself interested in internet software engineering, front-end technology and internet product management when i was in grade 2.&lt;/p&gt;

&lt;p&gt;My passion for those skills drove me to learn many basic skills related to front-end technology at first, such as html, css, javascript, ajax, jQuery…it’s easy to get familiar with these skills, but it’s hard to be a master of them.&lt;/p&gt;

&lt;p&gt;When i was at a higher level, i started to use some front-end tools such as bootstrap or element to build up a website quickly, or use echarts to implement data visualization, or use fullpage to insert one-page sections in my website.&lt;/p&gt;

&lt;p&gt;My next step is to get a web server of my own and bind my domain    to it. I made it by looking for free host in “wanwang” and luckily received a free one for two year’s ownership. I bought my domain in “wanwang” as well, which cost no more than 50 RMB each year.&lt;/p&gt;

&lt;p&gt;At present, i’m using a ftp tool — FileZilla to manage my home site. All i need to do is to set up my site with the correct IP address and password, connect my computer to it, then i can upload or delete files in my host.&lt;/p&gt;

&lt;p&gt;After the formation of my home site has been done, i used  a fast and flexible static site generator — hugo to generate my blog, which is used to save up all my experience and progress during my study and work as a front-end engineer and a product manager.&lt;/p&gt;

&lt;p&gt;Another site generator — hexo has been used to build up my lyrics collection site for a japanese singer, i simply just chose the right template, modified its config and did some beautifications by css and js.&lt;/p&gt;

&lt;p&gt;I’m working on a project called “Lily” as a product manager with a friend who acts as the engineer, this website will provide people with functions such as listening to their favorite singer’s FM radio, make comments and share their stories.&lt;/p&gt;

&lt;p&gt;All those works mentioned above are deployed on github and i’m using git to control these remotes.&lt;/p&gt;

&lt;h1 id=&#34;snapshots&#34;&gt;Snapshots&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/FE66A652-FA07-40AA-A9CD-67F949071E20.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/FE8AC9C6-7207-4432-A5AF-FF46FE9D71DA.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/40DA7AAC-3AEF-48B5-8743-8B6A8BCC56FD.png&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/090658EC-9FDD-4A6D-AE9F-C23C5DDF664E.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一份礼物</title>
      <link>https://riddledle.github.io/hugoblog/post/%E6%88%91%E7%9A%84%E6%9C%8B%E5%8F%8B%E7%BB%99%E6%88%91%E7%9A%84%E7%A4%BC%E7%89%A9/</link>
      <pubDate>Mon, 10 Oct 2016 01:44:27 +0800</pubDate>
      
      <guid>https://riddledle.github.io/hugoblog/post/%E6%88%91%E7%9A%84%E6%9C%8B%E5%8F%8B%E7%BB%99%E6%88%91%E7%9A%84%E7%A4%BC%E7%89%A9/</guid>
      <description>&lt;p&gt;谢谢！&lt;img src=&#34;http://o7o0hlenq.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-10-09%20%E4%B8%8B%E5%8D%889.09.55.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>